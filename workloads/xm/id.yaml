apiVersion: v1
kind: Service
metadata:
  name: id
spec:
  selector:
    app: id
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: id-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: $(id-hostname)
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: id
                port:
                  number: 80
  tls:
    - secretName: id-tls
      hosts:
        - $(id-hostname)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: id
  labels:
    app: id
spec:
  replicas: 1
  selector:
    matchLabels:
      app: id
  template:
    metadata:
      labels:
        app: id
    spec:
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
        - key: os
          operator: Equal
          value: windows
          effect: NoSchedule
      containers:
        - name: sitecore-xm1-id
          image: sitecore-xm1-id
          ports:
            - containerPort: 80
          env:
            - name: Database_Server
              valueFrom:
                secretKeyRef:
                  name: sitecore-database
                  key: sitecore-databaseservername.txt
            - name: Core_Database_Username
              valueFrom:
                secretKeyRef:
                  name: sitecore-database
                  key: sitecore-core-database-username.txt
            - name: Core_Database_Password
              valueFrom:
                secretKeyRef:
                  name: sitecore-database
                  key: sitecore-core-database-password.txt
            - name: Sitecore_Sitecore__IdentityServer__Clients__PasswordClient__ClientSecrets__ClientSecret1
              valueFrom:
                secretKeyRef:
                  name: sitecore-identity
                  key: sitecore-identitysecret.txt
            - name: Sitecore_Sitecore__IdentityServer__CertificateRawData
              valueFrom:
                secretKeyRef:
                  name: sitecore-identitycertificate
                  key: sitecore-identitycertificate.txt
            - name: Sitecore_Sitecore__IdentityServer__CertificateRawDataPassword
              valueFrom:
                secretKeyRef:
                  name: sitecore-identitycertificate
                  key: sitecore-identitycertificatepassword.txt
            - name: Sitecore_License
              valueFrom:
                secretKeyRef:
                  name: sitecore-license
                  key: sitecore-license.txt
            - name: Sql_Database_Prefix
              valueFrom:
                secretKeyRef:
                  name: sitecore-database
                  key: sitecore-databaseprefix.txt
            - name: Sitecore_Sitecore__IdentityServer__SitecoreMemberShipOptions__ConnectionString
              value: Data Source=$(Database_Server);Initial Catalog=$(Sql_Database_Prefix).Core;User ID=$(Core_Database_Username);Password=$(Core_Database_Password);
            - name: Sitecore_Sitecore__IdentityServer__AccountOptions__PasswordRecoveryUrl
              value: https://$(cm-hostname)/sitecore/login?rc=1
            - name: Sitecore_Sitecore__IdentityServer__Clients__DefaultClient__AllowedCorsOrigins__AllowedCorsOriginsGroup1
              value: https://$(cm-hostname)
            - name: Sitecore_Sitecore__IdentityServer__PublicOrigin
              value: https://$(id-hostname)
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 80
              httpHeaders:
                - name: X-Kubernetes-Probe
                  value: Liveness
            timeoutSeconds: 300
            periodSeconds: 30
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 80
              httpHeaders:
                - name: X-Kubernetes-Probe
                  value: Startup
            timeoutSeconds: 300
            periodSeconds: 30
            failureThreshold: 10
          resources:
            requests:
              memory: 300Mi
              cpu: 200m
            limits:
              memory: 1Gi
              cpu: 500m
          volumeMounts:
            - mountPath: C:\Identity\logs
              name: tmp
      volumes:
        - name: tmp
          emptyDir: {}